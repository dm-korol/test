name: Base CI
on:
  workflow_dispatch:
    inputs:
      rds:
        description: 'REdeploy RDS '
        required: true
        default: 'no'
      test:
        description: 'test'
        required: false
        default: 'test' 



jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: chmod +x ./gradlew 
      - name: set up Java stuff
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Gradle
        run: ./gradlew build
      - run: echo "run unit tests" 
      - run: echo " run integration test"
      - uses: actions/upload-artifact@v2
        with:
          name: integration-tests-reports
          path: test 
      - run: echo "push new artifact"
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: test aws cli
        if: ${{ github.event.inputs.rds == 'yes' }}
        run: |
          aws rds help
      - run: echo "deploy new version"
      - run: | 
          echo $SSH_KEY > ssh_key.pem; \
          chmod 600 ssh_key.pem; \
          cat ssh_key.pem; \
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-52-47-95-181.eu-west-3.compute.amazonaws.com -i ssh_key.pem "ls -lah"
