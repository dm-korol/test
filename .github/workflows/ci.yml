name: Base CI
on:
  workflow_dispatch:
    inputs:
      rds:
        description: 'REdeploy RDS '
        required: true
        default: 'no'
      test:
        description: 'test'
        required: false
        default: 'test' 



jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - run: sudo apt-get install -y postgresql-client; psql --version;
      - run: chmod +x ./gradlew 
      - name: set up Java stuff
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Gradle
        run: gradle build -x testIntegration
      - name: prepare jar file
        run: cp ./build/libs/*.jar ./app.jar
      - uses: actions/upload-artifact@v2
        with:
          name: application
          path: ./build/libs/*.jar
      - uses: actions/upload-artifact@v2
        with:
          name: report
          path: ./build/reports
   
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: cleanup database
        if: ${{ github.event.inputs.rds == 'yes' }}
        run: |
          export PGPASSWORD= {{ secrets.PG_PASSWORD }} ;psql -h rds-postgres-1.cl8o5za2bvlu.eu-west-3.rds.amazonaws.com -d postgres -U postgres -c 'drop database dps' -c 'create database dps; \
          psql -h rds-postgres-1.cl8o5za2bvlu.eu-west-3.rds.amazonaws.com -d dps -U postgres < src/main/resources/database/initdb.sql ; \
          psql -h rds-postgres-1.cl8o5za2bvlu.eu-west-3.rds.amazonaws.com -d dps -U postgres < src/main/resources/database/fill_static_data.sql ; 
      - name: Deploy to server (EC2)
        uses: nogsantos/scp-deploy@master
        with:
          src: ./app.jar
          host: ec2-52-47-95-181.eu-west-3.compute.amazonaws.com
          remote: /var/sensilize
          port: 22
          user: ubuntu
          key: ${{ secrets.SSH_KEY }}
      - name: ls -a via ssh
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: ls -a /var/sensilize
          host: ec2-52-47-95-181.eu-west-3.compute.amazonaws.com
          username: ubuntu
          privateKey: ${{ secrets.SSH_KEY }}
              
      
